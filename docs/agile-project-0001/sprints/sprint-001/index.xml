<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sprint #001 on Intradocs</title>
    <link>/intradocs/docs/agile-project-0001/sprints/sprint-001/</link>
    <description>Recent content in Sprint #001 on Intradocs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <atom:link href="/intradocs/docs/agile-project-0001/sprints/sprint-001/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Task 001</title>
      <link>/intradocs/docs/agile-project-0001/sprints/sprint-001/task-001/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/intradocs/docs/agile-project-0001/sprints/sprint-001/task-001/</guid>
      <description>@startuml Alice -&amp;gt; Bob: Authentication Request Bob --&amp;gt; Alice: Authentication Response Alice -&amp;gt; Bob: Another authentication Request Alice &amp;lt;-- Bob: Another authentication Response @enduml </description>
    </item>
    <item>
      <title>Task 002</title>
      <link>/intradocs/docs/agile-project-0001/sprints/sprint-001/task-002/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/intradocs/docs/agile-project-0001/sprints/sprint-001/task-002/</guid>
      <description>The plan is to go with this approach, Javascript, HTML, pretty standard stuff.&#xA;// pages/_app.js import React from &amp;#39;react&amp;#39;; import App, { Container } from &amp;#39;next/app&amp;#39;; import Layout from &amp;#39;../components/Layout&amp;#39;; class MyApp extends App { render() { const { Component, pageProps } = this.props; return ( &amp;lt;Container&amp;gt; &amp;lt;Layout&amp;gt; &amp;lt;Component {...pageProps} /&amp;gt; &amp;lt;/Layout&amp;gt; &amp;lt;/Container&amp;gt; ); } } export default MyApp; </description>
    </item>
  </channel>
</rss>
